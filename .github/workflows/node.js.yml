# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
on:
  workflow_dispatch:
    inputs:
      name:
        description: "docker tags"
        default: 'latest'
        required: true



#   push:
#     branches: ["main"]
  
#   pull_request:
#     branches: [ "main" ]

jobs:
  npm-build:

    runs-on: ubuntu-latest



    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
        cache: 'npm'
    - run: npm install
    - run: npm run build
    - run: pwd && ls -lrth
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: my-artifacts
        # A file, directory or wildcard pattern that describes what to upload
        path: dist
        # The desired behavior if no files are found using the provided path.
  docker-build:
    needs: [npm-build]
    
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'build'
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: tags
      run: echo "tags name ${{ github.event.inputs.name }}"

    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        # Artifact name
        name: my-artifacts
        # Destination path
        path: dist
    - run: ls -lrth
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: venkadeshw55/myangularweb:${{ github.event.inputs.name }}
        platforms: linux/arm64





 

