# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
#author : venkadeshwaran
name: Angular-js-CI-GitOps
on:
  workflow_dispatch:
    inputs:
      name:
        description: "docker tags"
        default: 'latest'
        required: true



#   push:
#     branches: ["main"]
  
#   pull_request:
#     branches: [ "main" ]

jobs:
  #stage - 1
  npm-build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
        cache: 'npm'
    - name: npm install, build
      run: |
        npm install
        npm run build
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: my-artifacts
        # A file, directory or wildcard pattern that describes what to upload
        path: dist
        # The desired behavior if no files are found using the provided path.
   #stage - 2     
  docker-build:
    needs: [npm-build]
    
    runs-on: ubuntu-latest
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: tags
      run: echo "tags name ${{ github.event.inputs.name }}"

    - name: checkout git
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/myangularweb:${{ github.event.inputs.name }}
        platforms: linux/arm64
  #stage - 3
  update-manifest-file:
    needs: [docker-build]
    
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
      with:
        repository: venkatkingw55/gitops-test
        ref: 'main'
        token: ${{ secrets.TOKEN }}
    - name: Display structure of downloaded files
      run: |
        ls -R
        sed -E -i 's%(venkadeshw55/myangularweb:).*%\1${{ github.event.inputs.name }}%' manifest/deployment.yml
        cat manifest/deployment.yml
    - name: Commit kustomization
      run: |
          git config --local user.email "venkadeshw55@gmail.com"
          git config --local user.name "venkat"
          git add manifest
          git commit -m "new $version image updated"
          git push origin main
          

 





 

